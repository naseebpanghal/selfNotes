!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
acceptor_	async_server.cpp	/^  tcp::acceptor acceptor_;$/;"	m	class:tcp_server	file:
create	async_server.cpp	/^  static pointer create(boost::asio::io_service& io_service)$/;"	f	class:tcp_connection
handle_accept	async_server.cpp	/^  void handle_accept(tcp_connection::pointer new_connection,$/;"	f	class:tcp_server	file:
handle_write	async_server.cpp	/^  void handle_write(const boost::system::error_code& \/*error*\/,$/;"	f	class:tcp_connection	file:
m_message	async_server.cpp	/^  std::string m_message;$/;"	m	class:tcp_connection	file:
main	async_server.cpp	/^int main()$/;"	f
make_daytime_string	async_server.cpp	/^std::string make_daytime_string()$/;"	f
pointer	async_server.cpp	/^  typedef boost::shared_ptr<tcp_connection> pointer;$/;"	t	class:tcp_connection	file:
socket	async_server.cpp	/^  tcp::socket& socket()$/;"	f	class:tcp_connection
socket_	async_server.cpp	/^  tcp::socket socket_;$/;"	m	class:tcp_connection	file:
start	async_server.cpp	/^  void start()$/;"	f	class:tcp_connection
start_accept	async_server.cpp	/^  void start_accept()$/;"	f	class:tcp_server	file:
tcp_connection	async_server.cpp	/^  tcp_connection(boost::asio::io_service& io_service)$/;"	f	class:tcp_connection	file:
tcp_connection	async_server.cpp	/^class tcp_connection$/;"	c	file:
tcp_server	async_server.cpp	/^  tcp_server(boost::asio::io_service& io_service)$/;"	f	class:tcp_server
tcp_server	async_server.cpp	/^class tcp_server$/;"	c	file:
